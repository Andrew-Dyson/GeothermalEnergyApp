[{"/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/index.js":"1","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/App.js":"2","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/reportWebVitals.js":"3","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Components/Graph.js":"4","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Components/GraphInputForm.js":"5","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Services/GraphService.js":"6","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Components/LocationList.js":"7","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Components/LocationItem.js":"8","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Components/RegionList.js":"9","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Components/RegionItem.js":"10","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Components/ResourceCalcOutput.js":"11","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Components/ResourceCalcInput.js":"12","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Containers/GraphContainer.js":"13","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Containers/ResCalcContainer.js":"14","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Containers/NavBar.js":"15","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Components/PlotByRegionButton.js":"16"},{"size":535,"mtime":1685714311028,"results":"17","hashOfConfig":"18"},{"size":589,"mtime":1686561066091,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1685714311028,"results":"20","hashOfConfig":"18"},{"size":371,"mtime":1686218937008,"results":"21","hashOfConfig":"18"},{"size":2393,"mtime":1686663309565,"results":"22","hashOfConfig":"18"},{"size":1590,"mtime":1686562771599,"results":"23","hashOfConfig":"18"},{"size":704,"mtime":1686584760608,"results":"24","hashOfConfig":"18"},{"size":289,"mtime":1686581775731,"results":"25","hashOfConfig":"18"},{"size":643,"mtime":1686584736965,"results":"26","hashOfConfig":"18"},{"size":261,"mtime":1686324392884,"results":"27","hashOfConfig":"18"},{"size":563,"mtime":1686669221256,"results":"28","hashOfConfig":"18"},{"size":5309,"mtime":1686669221256,"results":"29","hashOfConfig":"18"},{"size":4032,"mtime":1686688637923,"results":"30","hashOfConfig":"18"},{"size":2653,"mtime":1686669999941,"results":"31","hashOfConfig":"18"},{"size":461,"mtime":1686688481547,"results":"32","hashOfConfig":"18"},{"size":518,"mtime":1686511060646,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"dtdud2",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"37"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},"/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/index.js",[],[],[],"/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/App.js",["95","96"],[],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport GraphContainer from './Containers/GraphContainer';\nimport ResCalcContainer from './Containers/ResCalcContainer';\nimport NavBar from './Containers/NavBar';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <Router>\n      <NavBar/>\n      <Routes>\n        <Route path=\"/data-plotting\" element={< GraphContainer />} />\n        <Route path=\"/resource-calculator\" element={< ResCalcContainer />} />\n      </Routes>\n    </Router>\n\n  );\n}\n\nexport default App;","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/reportWebVitals.js",[],[],"/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Components/Graph.js",["97","98","99"],[],"import React, { useState, useEffect } from 'react';\n\nconst Graph = ({plotImage, data}) => {\n\n    const createImagePath = (inputImage) => {\n        const imagePath = \"Images/\" + inputImage\n        return imagePath\n    }\n\n  return (\n    <div>\n      {/* <img src={createImagePath(plotImage)} alt=\"\" /> */}\n      \n      {/* {data} */}\n    </div>\n  );\n}\n\nexport default Graph;","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Components/GraphInputForm.js",["100","101"],[],"import React, { useState, useEffect } from 'react';\nimport './GraphInputForm.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowDown } from '@fortawesome/free-solid-svg-icons'\nimport { faCircleArrowDown } from '@fortawesome/free-solid-svg-icons'\n\n\n\nconst GraphInputForm = ({createGraph}) => {\n    const [name, setName] = useState(\"\")\n    const [region, setRegion] = useState(\"\")\n    const [temperature, setTemperature] = useState(\"\")\n    const [depth, setDepth] = useState(\"\")\n    \n\n    const handleSubmit = (ev) => {\n        // ev.preventDefault();\n        createGraph({\n            name: name, \n            region: region,\n            temperature: temperature,\n            depth: depth\n        })\n        // setLocation(\"\");\n        // setElevation(\"\")\n        // setTemperature(\"\");\n        // setDepth(\"\");\n    }\n\n    const handleNameChange = (ev) => {\n        setName(ev.target.value)\n    }\n    const handleRegionChange = (ev) => {\n        setRegion(ev.target.value)\n    }\n    const handleTempChange = (ev) => {\n        setTemperature(ev.target.value)\n    }\n    const handleDepthChange = (ev) => {\n        setDepth(ev.target.value)\n    }\n\n  return (\n    <div>\n        <div className=\"UserInputslabel\">\n        <p>Input Data</p>\n        <FontAwesomeIcon icon={faCircleArrowDown } size=\"xl\" className=\"DownArrow\"/>\n        </div>\n      <form className=\"UserGraphInputs\">\n        <div className=\"InputItem\">\n        <label htmlFor=\"name\">Location</label>\n        <input className=\"InputField\" type=\"text\" id=\"name\" onChange={handleNameChange}/>\n        </div>\n        <div className=\"InputItem\">\n        <label htmlFor=\"elevation\">Region</label>\n        <input className=\"InputField\" type=\"text\" id=\"region\" onChange={handleRegionChange}/>\n        </div>\n        <div className=\"InputItem\">\n        <label htmlFor=\"temperature\" >Temperature</label>\n        <input className=\"InputField\" type=\"text\" id=\"temperature\" onChange={handleTempChange}/>\n        </div>\n        <div className=\"InputItem\">\n        <label htmlFor=\"depth\">Depth</label>\n        <input className=\"InputField\" type=\"text\" id=\"depth\" onChange={handleDepthChange}/>\n        </div>\n        <div >\n        <input className=\"UserInputButton\" type=\"button\" name=\"submit\" value=\"Get Graph\" onClick={handleSubmit}/>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default GraphInputForm;","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Services/GraphService.js",[],[],"/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Components/LocationList.js",["102"],[],"import Graph from './Graph';\nimport LocationItem from './LocationItem';\nimport './LocationList.css'\n\n\nconst LocationList = ({locationData, createGraphWithLocation}) => {\n    const locationItems = locationData.map(location => {\n        return <LocationItem\n        key={location.location_id}\n        locationObject={location}\n        ></LocationItem>\n    });\n\nconst handleLocationSelect = (ev) => {\n    console.log(ev.target.value)\n    createGraphWithLocation({\n        location_id: ev.target.value, \n    })\n\n}\n\n    return(\n        <div>\n        <select className=\"LocationDropdownItem\" onChange={handleLocationSelect}>{locationItems}\n        </select>\n        </div>\n    )\n}\n\nexport default LocationList;","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Components/LocationItem.js",["103","104"],[],"import React, { useState, useEffect } from 'react';\n\n\nconst LocationItem = ({locationObject}) => {\n\n    if (!locationObject) return null\n\n  return (\n    <>\n    <option value={locationObject.location_id}> {locationObject.location_name} </option>\n    </>\n  );\n}\n\nexport default LocationItem;","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Components/RegionList.js",["105"],[],"import Graph from './Graph';\nimport RegionItem from './RegionItem';\nimport './RegionList.css'\n\nconst RegionList = ({regions, createGraphWithRegion}) => {\n    const regionItems = regions.map(region => {\n        return <RegionItem\n        key={region.region_id}\n        regionObject={region}\n        ></RegionItem>\n    });\n\nconst handleRegionSelect = (ev) => {\n    console.log(ev.target.value)\n    createGraphWithRegion({\n        Region_name: ev.target.value\n    })\n}\n\n    return(\n        <div>\n        <select className=\"RegionDropdownItem\" onChange={handleRegionSelect}>{regionItems}</select>\n        </div>\n    )\n}\n\nexport default RegionList;","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Components/RegionItem.js",["106","107"],[],"import React, { useState, useEffect } from 'react';\n\nconst RegionItem = ({regionObject}) => {\n    \n\nif (!regionObject) return null\n\n  return (\n    <>\n    <option value={regionObject.name}> {regionObject.name} </option>\n    </>\n  );\n}\n\nexport default RegionItem;","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Components/ResourceCalcOutput.js",["108","109"],[],"import React, { useState, useEffect } from 'react';\nimport './ResourceCalcOutput.css'\n\nconst ResourceCalcOutput = ({heatInPlaceCalcResult, energyDemand, difference, recoverableHeatCalcResult}) => {\n\n\n\n    return(\n        <div className=\"UserCalcOutputs\">\n        <p className=\"CalcOutputItem\"> Heat in place: {heatInPlaceCalcResult} Gj</p>\n        <p className=\"CalcOutputItem\"> Recoverable Heat: {recoverableHeatCalcResult} Gj</p>\n        <p className=\"CalcOutputItem\"> Difference: {difference} Gj</p>\n        </div>\n    )\n\n\n}\n\nexport default ResourceCalcOutput;","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Components/ResourceCalcInput.js",["110"],[],"import React, { useState, useEffect } from 'react';\nimport './ResourceCalcInput.css'\n\n\nconst ResourceCalcInput = ({calculateResources}) => {\n     const [thickness, setThickness] = useState(null);\n     const [area, setArea] = useState(null);\n     const [porosity, setPorosity] = useState(null);\n     const [fluidSpecificDensity, setFluidSpecificDensity] = useState(null);\n     const [rockSpecificDensity, setRockSpecificDensity] = useState(null);\n     const [fluidSpecificHeatCapacity, setFluidSpecificHeatCapacity] = useState(null);\n     const [rockSpecificHeatCapacity, setRockSpecificHeatCapacity] = useState(null);\n     const [reservoirTemperature, setReservoirTemperature] = useState(null);\n     const [recoveryFactor, setRecoveryFactor] = useState(null);\n     const [demand, setDemand] = useState(null);\n\n    const handleThicknessChange = (ev) => {\n        setThickness(ev.target.value)\n    }\n\n    const handleAreaChange = (ev) => {\n        setArea(ev.target.value)\n    }\n\n    const handlePorosityChange = (ev) => {\n        setPorosity(ev.target.value)\n    }\n\n    const handleFlSpecDenChange = (ev) => {\n        setFluidSpecificDensity(ev.target.value)\n    }\n\n    const handleRockSpecDenChange = (ev) => {\n        setRockSpecificDensity(ev.target.value)\n    }\n\n    const handleFlSpecHeatCapChange = (ev) => {\n        setFluidSpecificHeatCapacity(ev.target.value)\n    }\n\n    const handleRockSpecHeatCapChange = (ev) => {\n        setRockSpecificHeatCapacity(ev.target.value)\n    }\n\n    const handleResTempChange = (ev) => {\n        setReservoirTemperature(ev.target.value)\n    }\n\n    const handleRecFacChange = (ev) => {\n        setRecoveryFactor(ev.target.value)\n    }\n\n    const handleDemandChange = (ev) => {\n        setDemand(ev.target.value)\n    }\n\n    const handleSubmit = (ev) => {\n        calculateResources({\n            thickness: thickness, \n            area: area,\n            porosity: porosity,\n            fluid_specific_density: fluidSpecificDensity,\n            rock_specific_density: rockSpecificDensity,\n            fluid_specific_heat_capacity: fluidSpecificHeatCapacity,\n            rock_specific_heat_capacity: rockSpecificHeatCapacity,\n            reservoir_temperature: reservoirTemperature,\n            demand: demand,\n            recoveryFactor: recoveryFactor\n\n        })\n    }\n\n    return(\n        <>\n        <form className=\"UserCalcInputs\">\n        <div className=\"CalcInputTypes\">\n        <div>\n            <div className=\"CalcInputItem\">\n            <label htmlFor=\"thickness\">Thickness (m) </label>\n            <input className=\"CalcInputField\" type=\"text\" id=\"thickness\" onChange={handleThicknessChange}/>\n            </div>\n            <div className=\"CalcInputItem\">\n            <label htmlFor=\"area\">Area (km<sup>2</sup>) </label>\n            <input className=\"CalcInputField\" type=\"text\" id=\"area\" onChange={handleAreaChange}/>\n            </div>\n            <div className=\"CalcInputItem\">\n            <label htmlFor=\"porosity\">Porosity (dec) </label>\n            <input className=\"CalcInputField\" type=\"text\" id=\"porosity\" onChange={handlePorosityChange}/>\n            </div>\n            <div className=\"CalcInputItem\">\n            <label htmlFor=\"rock_specific_density\">Rock density (kg/m<sup>3</sup>) </label>\n            <input className=\"CalcInputField\" type=\"text\" id=\"rock_specific_density\" onChange={handleRockSpecDenChange}/>\n            </div>\n            <div className=\"CalcInputItem\">\n            <label htmlFor=\"rock_specific_heat_capacity\">Rock heat capacity (kg/m<sup>3</sup>) </label>\n            <input className=\"CalcInputField\" type=\"text\" id=\"rock_specific_heat_capacity\" onChange={handleRockSpecHeatCapChange}/>\n            </div>\n        </div>\n        <div>\n            <div className=\"CalcInputItem\">\n            <label htmlFor=\"fluid_specific_density\">Fluid density (kg/m<sup>3</sup>) </label>\n            <input className=\"CalcInputField\" type=\"text\" id=\"fluid_specific_density\" onChange={handleFlSpecDenChange}/>\n            </div>\n            <div className=\"CalcInputItem\">\n            <label htmlFor=\"fluid_specific_heat_capacity\">Fluid heat capacity (kg/m<sup>3</sup>) </label>\n            <input className=\"CalcInputField\" type=\"text\" id=\"fluid_specific_heat_capacity\" onChange={handleFlSpecHeatCapChange}/>\n            </div>\n            <div className=\"CalcInputItem\">\n            <label htmlFor=\"reservoir_temperature\">Temperature (<sup>o</sup>C) </label>\n            <input className=\"CalcInputField\" type=\"text\" id=\"reservoir_temperature\" onChange={handleResTempChange}/>\n            </div>\n            <div className=\"CalcInputItem\">\n            <label htmlFor=\"recovery_factor\">Recovery factor (%) </label>\n            <input className=\"CalcInputField\" type=\"text\" id=\"recovery_factor\" onChange={handleRecFacChange}/>\n            </div>\n            <div className=\"CalcInputItem\">\n            <label htmlFor=\"demand\">Demand (gigajoules) </label>\n            <input className=\"CalcInputField\" type=\"text\" id=\"demand\" onChange={handleDemandChange}/>\n            </div>\n        </div>\n        </div>\n            <div>\n                <input className=\"CalcInputButton\" type=\"button\" name=\"submit\" value=\"Calculate\" onClick={handleSubmit}/>\n            </div>\n        </form>\n        </>\n    )\n\n}\n\nexport default ResourceCalcInput;","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Containers/GraphContainer.js",["111","112","113"],[],"import React, { useState, useEffect } from 'react';\nimport Graph from '../Components/Graph';\nimport GraphInputForm from '../Components/GraphInputForm';\nimport GraphService from '../Services/GraphService';\nimport LocationList from '../Components/LocationList';\nimport RegionList from '../Components/RegionList';\nimport PlotByRegionButton from '../Components/PlotByRegionButton';\nimport './GraphContainer.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCircleArrowDown } from '@fortawesome/free-solid-svg-icons'\n\nconst GraphContainer = () => {\n  const [plotImage, setPlotImage] = useState(null);\n  // const [inputData, setInputData] = useState([]);\n  const [locationData, setLocationData] = useState([]);\n  const [regions, setRegions] = useState([]);\n\n  // useEffect(() => {\n  //   fetch('http://127.0.0.1:5000/graphdata')\n  //     .then(res => res.json())\n  //     .then(data => setPlotImage(data.image))\n  // }, [plotImage]);\n\n  useEffect(() => {\n    getLocationData() \n  }, [])\n\n  function getLocationData(){\n    fetch('http://127.0.0.1:5000/data/locations')\n    .then(res => res.json())\n    // .then(data => console.log(data))\n    .then(data => setLocationData(data))\n  }\n\n  useEffect(() => {\n    setRegions(getRegions())\n  }, [])\n\n  const getRegions = () => {\n    const inputted_regions = [{\n      name: \"Caithness, Scotland\",\n      region_id: 1\n    }, \n    {\n      name: \"East Grampians, Scotland\",\n      region_id: 2\n    }, \n    {\n      name: \"Western Central Belt, Scotland\",\n      region_id: 3\n    }, \n    {\n      name: \"Eastern Central Belt, Scotland\",\n      region_id: 4\n    },\n    {\n      name: \"Dumfries and Galloway, Scotland\",\n      region_id: 5\n    }]\n    // let location\n    // for (location in locationData)\n    // {\n    //   let region\n    //   let counter = 0\n    //   for ( region in regions) {\n    //     if (region === location.region)\n    //     counter += 1\n    //   }\n    //   {regions.push(location.region)}\n    // }\n    return inputted_regions\n  }\n\n  function createGraph(geoData) {\n    GraphService.addGraph(geoData)\n    .then(data => {\n      console.log(data)\n      // setPlotImage(data.image)\n    })\n    .then(data => console.log(data.image))\n    }\n\n    function createGraphWithLocation(geoData) {\n      GraphService.addGraphWithLocation(geoData)\n      .then(data => {\n        console.log(data)\n        // setPlotImage(data.image)\n      })\n      .then(data => console.log(data))\n      }\n\n\n  function createGraphAllLocationsByRegion() {\n    let regions = []\n    regions = getRegions()\n  \n    GraphService.addGraphWithLocationsByRegion(regions)\n    .then(data => {\n      console.log(data)\n      // setPlotImage(data.image)\n    })\n    .then(data => console.log(data))\n    }\n\n  function createGraphWithRegion(geoData) {\n    GraphService.addGraphWithRegion(geoData)\n    .then(data => {\n      console.log(data)\n    })\n    .then(data => console.log(data))\n    }\n\n\n\n  return (\n    <div>\n    \n      <div className=\"UserInputsAndGraph\">\n          \n          <GraphInputForm createGraph={createGraph}/>\n          <div className=\"GraphParent\">\n          <img className=\"GraphImage\" src=\"Images/TestImage1.png\" alt=\"Graph showing temperature vs depth data points\" />\n          </div>\n      </div>\n      <div className=\"FilterLabelAndInputs\">\n          <div className=\"FilterDatalabel\">\n              <p>Filter data</p>\n              <FontAwesomeIcon icon={faCircleArrowDown } size=\"xl\" className=\"DownArrow\"/>\n          </div>\n          <div className=\"SelectInputs\">\n              <ul className=\"LocationList\">\n                <LocationList locationData={locationData} createGraphWithLocation={createGraphWithLocation}/>\n              </ul>\n              <ul className=\"RegionList\">\n                <RegionList regions={regions} createGraphWithRegion={createGraphWithRegion}/>\n              </ul>\n                <PlotByRegionButton createGraphAllLocationsByRegion={createGraphAllLocationsByRegion}/>\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default GraphContainer;  ","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Containers/ResCalcContainer.js",["114"],[],"import React, { useState, useEffect } from 'react';\nimport ResourceCalcInput from '../Components/ResourceCalcInput';\nimport ResourceCalcOutput from '../Components/ResourceCalcOutput';\n\n\n\n\nconst ResCalcContainer = () => {\n    const [heatInPlaceCalcResult, setHeatInPlaceCalcResult] = useState(null);\n    const [recoverableHeatCalcResult, setRecoverableHeatCalcResult] = useState(null);\n    const [energyDemand, setEnergyDemand] = useState(null);\n    const [difference, setDifference] = useState(null);\n\n\n    const calculateResources = (variables_object) => {\n        let heat_in_place = 0\n        let recoverable_heat = 0\n        let thickness = 0\n        let area = 0\n        let porosity = 0\n        let fluidSpecificDensity = 0\n        let rockSpecificDensity = 0\n        let fluidSpecificHeatCapacity = 0\n        let rockSpecificHeatCapacity = 0\n        let reservoirTemperature = 0\n        let recoveryFactor = 0\n\n        let demand = 0\n\n        thickness = variables_object.thickness\n        area = variables_object.area\n        porosity = (variables_object.porosity/100)\n        fluidSpecificDensity = variables_object.fluid_specific_density\n        rockSpecificDensity = variables_object.rock_specific_density\n        fluidSpecificHeatCapacity = variables_object.fluid_specific_heat_capacity\n        rockSpecificHeatCapacity = variables_object.rock_specific_heat_capacity\n        reservoirTemperature = variables_object.reservoir_temperature\n        recoveryFactor = variables_object.recoveryFactor\n    \n        demand = variables_object.demand\n\n        heat_in_place = ((((area*1000000)*thickness)*(porosity*fluidSpecificDensity*fluidSpecificHeatCapacity*(1-porosity)*rockSpecificDensity*rockSpecificHeatCapacity)*reservoirTemperature)/1000)/1000000\n        const heatInPlaceNoDecimal = Math.trunc(heat_in_place) \n        recoverable_heat = heat_in_place*recoveryFactor\n        const recoverableHeatNoDecimal = Math.trunc(recoverable_heat)\n        const difference = recoverableHeatNoDecimal - demand\n        const differenceNoDecimal = Math.trunc(difference)\n        setHeatInPlaceCalcResult(heatInPlaceNoDecimal)\n        setRecoverableHeatCalcResult(recoverableHeatNoDecimal)\n        setEnergyDemand(demand)\n        setDifference(differenceNoDecimal)\n    }\n\n    return(\n        <div>\n        <ResourceCalcInput \n        calculateResources={calculateResources}/>\n        <ResourceCalcOutput \n        heatInPlaceCalcResult={heatInPlaceCalcResult}\n        recoverableHeatCalcResult={recoverableHeatCalcResult}\n        energyDemand={energyDemand}\n        difference={difference}\n        />\n        </div>\n    )\n\n}\n\nexport default ResCalcContainer;","/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Containers/NavBar.js",[],[],"/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Components/PlotByRegionButton.js",["115","116"],[],"import React, { useState, useEffect } from 'react';\nimport './PlotByRegionButton.css'\n\nconst PlotByRegionButton = ({createGraphAllLocationsByRegion}) => {\n    \n\n    const handleSubmit = (ev) => {\n        // ev.preventDefault();\n        createGraphAllLocationsByRegion()\n    }\n\n    \n\n  return (\n    <div>\n      <form>\n        <input className=\"RegionsInputItem\" type=\"button\" name=\"submit\" value=\"Plot all locations by region\" onClick={handleSubmit}/>\n      </form>\n    </div>\n  );\n}\n\nexport default PlotByRegionButton;",{"ruleId":"117","severity":1,"message":"118","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"121","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"118","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"121","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"122","line":5,"column":11,"nodeType":"119","messageId":"120","endLine":5,"endColumn":26},{"ruleId":"117","severity":1,"message":"121","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"123","line":4,"column":10,"nodeType":"119","messageId":"120","endLine":4,"endColumn":21},{"ruleId":"117","severity":1,"message":"124","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":13},{"ruleId":"117","severity":1,"message":"118","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"121","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"124","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":13},{"ruleId":"117","severity":1,"message":"118","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"121","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"118","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"121","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"121","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"124","line":2,"column":8,"nodeType":"119","messageId":"120","endLine":2,"endColumn":13},{"ruleId":"117","severity":1,"message":"125","line":13,"column":10,"nodeType":"119","messageId":"120","endLine":13,"endColumn":19},{"ruleId":"117","severity":1,"message":"126","line":13,"column":21,"nodeType":"119","messageId":"120","endLine":13,"endColumn":33},{"ruleId":"117","severity":1,"message":"121","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"118","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"121","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'createImagePath' is assigned a value but never used.","'faArrowDown' is defined but never used.","'Graph' is defined but never used.","'plotImage' is assigned a value but never used.","'setPlotImage' is assigned a value but never used."]