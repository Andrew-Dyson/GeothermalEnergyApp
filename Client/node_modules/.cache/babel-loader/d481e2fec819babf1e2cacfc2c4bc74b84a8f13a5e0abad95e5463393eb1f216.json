{"ast":null,"code":"var _jsxFileName = \"/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Containers/ResCalcContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ResourceCalcInput from '../Components/ResourceCalcInput';\nimport ResourceCalcOutput from '../Components/ResourceCalcOutput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResCalcContainer = () => {\n  _s();\n  const [heatInPlaceCalcResult, setHeatInPlaceCalcResult] = useState(null);\n  const [recoverableHeatCalcResult, setRecoverableHeatCalcResult] = useState(null);\n  const [energyDemand, setEnergyDemand] = useState(null);\n  const [difference, setDifference] = useState(null);\n  const [thickness, setThickness] = useState(null);\n  const [area, setArea] = useState(null);\n  const [porosity, setPorosity] = useState(null);\n  const [fluidSpecificDensity, setFluidSpecificDensity] = useState(null);\n  const [rockSpecificDensity, setRockSpecificDensity] = useState(null);\n  const [fluidSpecificHeatCapacity, setFluidSpecificHeatCapacity] = useState(null);\n  const [rockSpecificHeatCapacity, setRockSpecificHeatCapacity] = useState(null);\n  const [reservoirTemperature, setReservoirTemperature] = useState(null);\n  const [recoveryFactor, setRecoveryFactor] = useState(null);\n  const [demand, setDemand] = useState(null);\n  const handleThicknessChange = ev => {\n    setThickness(ev.target.value);\n  };\n  const handleAreaChange = ev => {\n    setArea(ev.target.value);\n  };\n  const handlePorosityChange = ev => {\n    setPorosity(ev.target.value);\n  };\n  const handleFlSpecDenChange = ev => {\n    setFluidSpecificDensity(ev.target.value);\n  };\n  const handleRockSpecDenChange = ev => {\n    setRockSpecificDensity(ev.target.value);\n  };\n  const handleFlSpecHeatCapChange = ev => {\n    setFluidSpecificHeatCapacity(ev.target.value);\n  };\n  const handleRockSpecHeatCapChange = ev => {\n    setRockSpecificHeatCapacity(ev.target.value);\n  };\n  const handleResTempChange = ev => {\n    setReservoirTemperature(ev.target.value);\n  };\n  const handleRecFacChange = ev => {\n    setRecoveryFactor(ev.target.value);\n  };\n  const handleDemandChange = ev => {\n    setDemand(ev.target.value);\n  };\n  useEffect(() => {\n    calculateResources();\n  }, [thickness]);\n  useEffect(() => {\n    calculateResources();\n  }, [area]);\n  useEffect(() => {\n    calculateResources();\n  }, [porosity]);\n  useEffect(() => {\n    calculateResources();\n  }, [fluidSpecificDensity]);\n  useEffect(() => {\n    calculateResources();\n  }, [rockSpecificDensity]);\n  useEffect(() => {\n    calculateResources();\n  }, [fluidSpecificHeatCapacity]);\n  useEffect(() => {\n    calculateResources();\n  }, [rockSpecificHeatCapacity]);\n  useEffect(() => {\n    calculateResources();\n  }, [reservoirTemperature]);\n  useEffect(() => {\n    calculateResources();\n  }, [recoveryFactor]);\n  useEffect(() => {\n    calculateResources();\n  }, [demand]);\n  const calculateResources = () => {\n    let calc_heat_in_place = 0;\n    let calc_recoverable_heat = 0;\n    let calc_thickness = thickness;\n    let calc_area = area;\n    let calc_porosity = porosity / 100;\n    let calc_fluidSpecificDensity = fluidSpecificDensity;\n    let calc_rockSpecificDensity = rockSpecificDensity;\n    let calc_fluidSpecificHeatCapacity = fluidSpecificHeatCapacity;\n    let calc_rockSpecificHeatCapacity = rockSpecificHeatCapacity;\n    let calc_reservoirTemperature = reservoirTemperature;\n    let calc_recoveryFactor = recoveryFactor / 100;\n    let calc_demand = demand;\n\n    // thickness = variables_object.thickness\n    // area = variables_object.area\n    // porosity = (variables_object.porosity/100)\n    // fluidSpecificDensity = variables_object.fluid_specific_density\n    // rockSpecificDensity = variables_object.rock_specific_density\n    // fluidSpecificHeatCapacity = variables_object.fluid_specific_heat_capacity\n    // rockSpecificHeatCapacity = variables_object.rock_specific_heat_capacity\n    // reservoirTemperature = variables_object.reservoir_temperature\n    // recoveryFactor = variables_object.recoveryFactor\n\n    // demand = variables_object.demand\n\n    calc_heat_in_place = calc_area * 1000000 * calc_thickness * (calc_porosity * calc_fluidSpecificDensity * calc_fluidSpecificHeatCapacity * (1 - calc_porosity) * calc_rockSpecificDensity * calc_rockSpecificHeatCapacity) * calc_reservoirTemperature / 1000 / 1000000;\n    const calc_heatInPlaceNoDecimal = Math.trunc(calc_heat_in_place);\n    calc_recoverable_heat = calc_heat_in_place * calc_recoveryFactor;\n    const calc_recoverableHeatNoDecimal = Math.trunc(calc_recoverable_heat);\n    const calc_difference = calc_recoverableHeatNoDecimal - calc_demand;\n    const calc_differenceNoDecimal = Math.trunc(calc_difference);\n    setHeatInPlaceCalcResult(calc_heatInPlaceNoDecimal);\n    setRecoverableHeatCalcResult(calc_recoverableHeatNoDecimal);\n    setEnergyDemand(calc_demand);\n    setDifference(calc_differenceNoDecimal);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ResourceCalcInput, {\n      handleThicknessChange: handleThicknessChange,\n      handleAreaChange: handleAreaChange,\n      handlePorosityChange: handlePorosityChange,\n      handleFlSpecDenChange: handleFlSpecDenChange,\n      handleRockSpecDenChange: handleRockSpecDenChange,\n      handleFlSpecHeatCapChange: handleFlSpecHeatCapChange,\n      handleRockSpecHeatCapChange: handleRockSpecHeatCapChange,\n      handleResTempChange: handleResTempChange,\n      handleRecFacChange: handleRecFacChange,\n      handleDemandChange: handleDemandChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ResourceCalcOutput, {\n      heatInPlaceCalcResult: heatInPlaceCalcResult,\n      recoverableHeatCalcResult: recoverableHeatCalcResult,\n      energyDemand: energyDemand,\n      difference: difference\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n_s(ResCalcContainer, \"kBINtEep861NVlJ1ddH3PazErgQ=\");\n_c = ResCalcContainer;\nexport default ResCalcContainer;\nvar _c;\n$RefreshReg$(_c, \"ResCalcContainer\");","map":{"version":3,"names":["React","useState","useEffect","ResourceCalcInput","ResourceCalcOutput","jsxDEV","_jsxDEV","ResCalcContainer","_s","heatInPlaceCalcResult","setHeatInPlaceCalcResult","recoverableHeatCalcResult","setRecoverableHeatCalcResult","energyDemand","setEnergyDemand","difference","setDifference","thickness","setThickness","area","setArea","porosity","setPorosity","fluidSpecificDensity","setFluidSpecificDensity","rockSpecificDensity","setRockSpecificDensity","fluidSpecificHeatCapacity","setFluidSpecificHeatCapacity","rockSpecificHeatCapacity","setRockSpecificHeatCapacity","reservoirTemperature","setReservoirTemperature","recoveryFactor","setRecoveryFactor","demand","setDemand","handleThicknessChange","ev","target","value","handleAreaChange","handlePorosityChange","handleFlSpecDenChange","handleRockSpecDenChange","handleFlSpecHeatCapChange","handleRockSpecHeatCapChange","handleResTempChange","handleRecFacChange","handleDemandChange","calculateResources","calc_heat_in_place","calc_recoverable_heat","calc_thickness","calc_area","calc_porosity","calc_fluidSpecificDensity","calc_rockSpecificDensity","calc_fluidSpecificHeatCapacity","calc_rockSpecificHeatCapacity","calc_reservoirTemperature","calc_recoveryFactor","calc_demand","calc_heatInPlaceNoDecimal","Math","trunc","calc_recoverableHeatNoDecimal","calc_difference","calc_differenceNoDecimal","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Containers/ResCalcContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ResourceCalcInput from '../Components/ResourceCalcInput';\nimport ResourceCalcOutput from '../Components/ResourceCalcOutput';\n\n\nconst ResCalcContainer = () => {\n    const [heatInPlaceCalcResult, setHeatInPlaceCalcResult] = useState(null);\n    const [recoverableHeatCalcResult, setRecoverableHeatCalcResult] = useState(null);\n    const [energyDemand, setEnergyDemand] = useState(null);\n    const [difference, setDifference] = useState(null);\n    const [thickness, setThickness] = useState(null);\n    const [area, setArea] = useState(null);\n    const [porosity, setPorosity] = useState(null);\n    const [fluidSpecificDensity, setFluidSpecificDensity] = useState(null);\n    const [rockSpecificDensity, setRockSpecificDensity] = useState(null);\n    const [fluidSpecificHeatCapacity, setFluidSpecificHeatCapacity] = useState(null);\n    const [rockSpecificHeatCapacity, setRockSpecificHeatCapacity] = useState(null);\n    const [reservoirTemperature, setReservoirTemperature] = useState(null);\n    const [recoveryFactor, setRecoveryFactor] = useState(null);\n    const [demand, setDemand] = useState(null);\n\n    const handleThicknessChange = (ev) => {\n        setThickness(ev.target.value)\n    }\n\n    const handleAreaChange = (ev) => {\n        setArea(ev.target.value)\n    }\n\n    const handlePorosityChange = (ev) => {\n        setPorosity(ev.target.value)\n    }\n\n    const handleFlSpecDenChange = (ev) => {\n        setFluidSpecificDensity(ev.target.value)\n    }\n\n    const handleRockSpecDenChange = (ev) => {\n        setRockSpecificDensity(ev.target.value)\n    }\n\n    const handleFlSpecHeatCapChange = (ev) => {\n        setFluidSpecificHeatCapacity(ev.target.value)\n    }\n\n    const handleRockSpecHeatCapChange = (ev) => {\n        setRockSpecificHeatCapacity(ev.target.value)\n    }\n\n    const handleResTempChange = (ev) => {\n        setReservoirTemperature(ev.target.value)\n    }\n\n    const handleRecFacChange = (ev) => {\n        setRecoveryFactor(ev.target.value)\n    }\n\n    const handleDemandChange = (ev) => {\n        setDemand(ev.target.value)\n    }\n\n    useEffect(() => {\n        calculateResources()\n      }, [thickness])\n    useEffect(() => {\n        calculateResources()\n      }, [area])\n    useEffect(() => {\n        calculateResources()\n      }, [porosity])\n    useEffect(() => {\n        calculateResources()\n      }, [fluidSpecificDensity])\n    useEffect(() => {\n        calculateResources()\n      }, [rockSpecificDensity])\n    useEffect(() => {\n        calculateResources()\n      }, [fluidSpecificHeatCapacity])\n    useEffect(() => {\n        calculateResources()\n      }, [rockSpecificHeatCapacity])\n    useEffect(() => {\n        calculateResources()\n      }, [reservoirTemperature])\n    useEffect(() => {\n        calculateResources()\n      }, [recoveryFactor])\n\n    useEffect(() => {\n        calculateResources()\n      }, [demand])\n\n    const calculateResources = () => {\n        let calc_heat_in_place = 0\n        let calc_recoverable_heat = 0\n        let calc_thickness = thickness\n        let calc_area = area\n        let calc_porosity = (porosity/100)\n        let calc_fluidSpecificDensity = fluidSpecificDensity\n        let calc_rockSpecificDensity = rockSpecificDensity\n        let calc_fluidSpecificHeatCapacity = fluidSpecificHeatCapacity\n        let calc_rockSpecificHeatCapacity = rockSpecificHeatCapacity\n        let calc_reservoirTemperature = reservoirTemperature\n        let calc_recoveryFactor = (recoveryFactor/100)\n\n        let calc_demand = demand\n\n        // thickness = variables_object.thickness\n        // area = variables_object.area\n        // porosity = (variables_object.porosity/100)\n        // fluidSpecificDensity = variables_object.fluid_specific_density\n        // rockSpecificDensity = variables_object.rock_specific_density\n        // fluidSpecificHeatCapacity = variables_object.fluid_specific_heat_capacity\n        // rockSpecificHeatCapacity = variables_object.rock_specific_heat_capacity\n        // reservoirTemperature = variables_object.reservoir_temperature\n        // recoveryFactor = variables_object.recoveryFactor\n    \n        // demand = variables_object.demand\n\n        calc_heat_in_place = ((((calc_area*1000000)*calc_thickness)*(calc_porosity*calc_fluidSpecificDensity*calc_fluidSpecificHeatCapacity*(1-calc_porosity)*calc_rockSpecificDensity*calc_rockSpecificHeatCapacity)*calc_reservoirTemperature)/1000)/1000000\n        const calc_heatInPlaceNoDecimal = Math.trunc(calc_heat_in_place) \n        calc_recoverable_heat = calc_heat_in_place*calc_recoveryFactor\n        const calc_recoverableHeatNoDecimal = Math.trunc(calc_recoverable_heat)\n        const calc_difference = calc_recoverableHeatNoDecimal - calc_demand\n        const calc_differenceNoDecimal = Math.trunc(calc_difference)\n        setHeatInPlaceCalcResult(calc_heatInPlaceNoDecimal)\n        setRecoverableHeatCalcResult(calc_recoverableHeatNoDecimal)\n        setEnergyDemand(calc_demand)\n        setDifference(calc_differenceNoDecimal)\n    }\n\n    return(\n        <div>\n        <ResourceCalcInput \n        handleThicknessChange={handleThicknessChange} handleAreaChange={handleAreaChange} handlePorosityChange={handlePorosityChange} handleFlSpecDenChange={handleFlSpecDenChange} handleRockSpecDenChange={handleRockSpecDenChange} handleFlSpecHeatCapChange={handleFlSpecHeatCapChange} handleRockSpecHeatCapChange={handleRockSpecHeatCapChange} handleResTempChange={handleResTempChange} handleRecFacChange={handleRecFacChange} handleDemandChange={handleDemandChange}/>\n        <ResourceCalcOutput \n        heatInPlaceCalcResult={heatInPlaceCalcResult}\n        recoverableHeatCalcResult={recoverableHeatCalcResult}\n        energyDemand={energyDemand}\n        difference={difference}\n        />\n        </div>\n    )\n\n}\n\nexport default ResCalcContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}