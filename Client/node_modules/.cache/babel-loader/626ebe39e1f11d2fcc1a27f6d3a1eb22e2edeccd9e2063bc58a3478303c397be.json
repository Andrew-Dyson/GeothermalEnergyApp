{"ast":null,"code":"var _jsxFileName = \"/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Containers/ResCalcContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ResourceCalcInput from '../Components/ResourceCalcInput';\nimport ResourceCalcOutput from '../Components/ResourceCalcOutput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResCalcContainer = () => {\n  _s();\n  const [heatInPlaceCalcResult, setHeatInPlaceCalcResult] = useState(null);\n  const [recoverableHeatCalcResult, setRecoverableHeatCalcResult] = useState(null);\n  const [energyDemand, setEnergyDemand] = useState(null);\n  const [difference, setDifference] = useState(null);\n  const calculateResources = variables_object => {\n    let heat_in_place = 0;\n    let recoverable_heat = 0;\n    let thickness = 0;\n    let area = 0;\n    let porosity = 0;\n    let fluidSpecificDensity = 0;\n    let rockSpecificDensity = 0;\n    let fluidSpecificHeatCapacity = 0;\n    let rockSpecificHeatCapacity = 0;\n    let reservoirTemperature = 0;\n    let recoveryFactor = 0;\n    let demand = 0;\n    thickness = variables_object.thickness;\n    area = variables_object.area;\n    porosity = variables_object.porosity / 100;\n    fluidSpecificDensity = variables_object.fluid_specific_density;\n    rockSpecificDensity = variables_object.rock_specific_density;\n    fluidSpecificHeatCapacity = variables_object.fluid_specific_heat_capacity;\n    rockSpecificHeatCapacity = variables_object.rock_specific_heat_capacity;\n    reservoirTemperature = variables_object.reservoir_temperature;\n    recoveryFactor = variables_object.recoveryFactor;\n    demand = variables_object.demand;\n    heat_in_place = area * 1000000 * thickness * (porosity * fluidSpecificDensity * fluidSpecificHeatCapacity * (1 - porosity) * rockSpecificDensity * rockSpecificHeatCapacity) * reservoirTemperature / 1000 / 1000000;\n    Math.trunc(heat_in_place);\n    recoverable_heat = heat_in_place * recoveryFactor;\n    Math.trunc(recoverable_heat);\n    let difference = recoverable_heat - demand;\n    Math.trunc(difference);\n    setHeatInPlaceCalcResult(heat_in_place);\n    setRecoverableHeatCalcResult(recoverable_heat);\n    setEnergyDemand(demand);\n    setDifference(difference);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ResourceCalcInput, {\n      calculateResources: calculateResources\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ResourceCalcOutput, {\n      heatInPlaceCalcResult: heatInPlaceCalcResult,\n      recoverableHeatCalcResult: recoverableHeatCalcResult,\n      energyDemand: energyDemand,\n      difference: difference\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(ResCalcContainer, \"AYNkmf+6rxs60XL0ZvBiP1/NMfE=\");\n_c = ResCalcContainer;\nexport default ResCalcContainer;\nvar _c;\n$RefreshReg$(_c, \"ResCalcContainer\");","map":{"version":3,"names":["React","useState","useEffect","ResourceCalcInput","ResourceCalcOutput","jsxDEV","_jsxDEV","ResCalcContainer","_s","heatInPlaceCalcResult","setHeatInPlaceCalcResult","recoverableHeatCalcResult","setRecoverableHeatCalcResult","energyDemand","setEnergyDemand","difference","setDifference","calculateResources","variables_object","heat_in_place","recoverable_heat","thickness","area","porosity","fluidSpecificDensity","rockSpecificDensity","fluidSpecificHeatCapacity","rockSpecificHeatCapacity","reservoirTemperature","recoveryFactor","demand","fluid_specific_density","rock_specific_density","fluid_specific_heat_capacity","rock_specific_heat_capacity","reservoir_temperature","Math","trunc","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Containers/ResCalcContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ResourceCalcInput from '../Components/ResourceCalcInput';\nimport ResourceCalcOutput from '../Components/ResourceCalcOutput';\n\n\n\n\nconst ResCalcContainer = () => {\n    const [heatInPlaceCalcResult, setHeatInPlaceCalcResult] = useState(null);\n    const [recoverableHeatCalcResult, setRecoverableHeatCalcResult] = useState(null);\n    const [energyDemand, setEnergyDemand] = useState(null);\n    const [difference, setDifference] = useState(null);\n\n\n    const calculateResources = (variables_object) => {\n        let heat_in_place = 0\n        let recoverable_heat = 0\n        let thickness = 0\n        let area = 0\n        let porosity = 0\n        let fluidSpecificDensity = 0\n        let rockSpecificDensity = 0\n        let fluidSpecificHeatCapacity = 0\n        let rockSpecificHeatCapacity = 0\n        let reservoirTemperature = 0\n        let recoveryFactor = 0\n\n        let demand = 0\n\n        thickness = variables_object.thickness\n        area = variables_object.area\n        porosity = (variables_object.porosity/100)\n        fluidSpecificDensity = variables_object.fluid_specific_density\n        rockSpecificDensity = variables_object.rock_specific_density\n        fluidSpecificHeatCapacity = variables_object.fluid_specific_heat_capacity\n        rockSpecificHeatCapacity = variables_object.rock_specific_heat_capacity\n        reservoirTemperature = variables_object.reservoir_temperature\n        recoveryFactor = variables_object.recoveryFactor\n    \n        demand = variables_object.demand\n\n        heat_in_place = ((((area*1000000)*thickness)*(porosity*fluidSpecificDensity*fluidSpecificHeatCapacity*(1-porosity)*rockSpecificDensity*rockSpecificHeatCapacity)*reservoirTemperature)/1000)/1000000\n        Math.trunc(heat_in_place) \n        recoverable_heat = heat_in_place*recoveryFactor\n        Math.trunc(recoverable_heat)\n        let difference = recoverable_heat - demand\n        Math.trunc(difference)\n        setHeatInPlaceCalcResult(heat_in_place)\n        setRecoverableHeatCalcResult(recoverable_heat)\n        setEnergyDemand(demand)\n        setDifference(difference)\n    }\n\n    return(\n        <div>\n        <ResourceCalcInput \n        calculateResources={calculateResources}/>\n        <ResourceCalcOutput \n        heatInPlaceCalcResult={heatInPlaceCalcResult}\n        recoverableHeatCalcResult={recoverableHeatCalcResult}\n        energyDemand={energyDemand}\n        difference={difference}\n        />\n        </div>\n    )\n\n}\n\nexport default ResCalcContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}