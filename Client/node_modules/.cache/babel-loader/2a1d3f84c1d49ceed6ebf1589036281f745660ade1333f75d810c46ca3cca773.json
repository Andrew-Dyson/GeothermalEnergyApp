{"ast":null,"code":"var _jsxFileName = \"/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Containers/GeoContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Graph from '../Components/Graph';\nimport GraphInputForm from '../Components/GraphInputForm';\nimport GraphService from '../Services/GraphService';\nimport LocationList from '../Components/LocationList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeoContainer = () => {\n  _s();\n  const [plotImage, setPlotImage] = useState(null);\n  // const [inputData, setInputData] = useState([]);\n  const [locationData, setLocationData] = useState([]);\n  const [regions, setRegions] = useState([]);\n\n  // useEffect(() => {\n  //   fetch('http://127.0.0.1:5000/graphdata')\n  //     .then(res => res.json())\n  //     .then(data => setPlotImage(data.image))\n  // }, [plotImage]);\n\n  useEffect(() => {\n    getLocationData();\n  }, []);\n  function getLocationData() {\n    fetch('http://127.0.0.1:5000/data/locations').then(res => res.json())\n    // .then(data => console.log(data))\n    .then(data => setLocationData(data));\n  }\n\n  // useEffect(() => {\n  //   getRegions() \n  // }, [locationData])\n\n  const getRegions = () => {\n    let regions = [];\n    let location;\n    for (location in locationData) {\n      regions.push(location.region);\n    }\n    return regions;\n  };\n  function createGraph(geoData) {\n    GraphService.addGraph(geoData).then(data => {\n      console.log(data);\n      // setPlotImage(data.image)\n    }).then(data => console.log(data.image));\n  }\n  function createGraphWithLocation(geoData) {\n    GraphService.addGraphWithLocation(geoData).then(data => {\n      console.log(data);\n      // setPlotImage(data.image)\n    }).then(data => console.log(data));\n  }\n  function createGraphWithRegion(geoData) {\n    GraphService.addGraphWithRegion(geoData).then(data => {\n      console.log(data);\n      // setPlotImage(data.image)\n    }).then(data => console.log(data));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GraphInputForm, {\n      createGraph: createGraph\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"Images/TestImage1.png\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(LocationList, {\n        locationData: locationData,\n        createGraphWithLocation: createGraphWithLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(LocationList, {\n        regions: regions,\n        createGraphWithRegion: createGraphWithRegion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(GeoContainer, \"KtgXGVIhVsjMbfhXjOHHb78z/Tc=\");\n_c = GeoContainer;\nexport default GeoContainer;\nvar _c;\n$RefreshReg$(_c, \"GeoContainer\");","map":{"version":3,"names":["React","useState","useEffect","Graph","GraphInputForm","GraphService","LocationList","jsxDEV","_jsxDEV","GeoContainer","_s","plotImage","setPlotImage","locationData","setLocationData","regions","setRegions","getLocationData","fetch","then","res","json","data","getRegions","location","push","region","createGraph","geoData","addGraph","console","log","image","createGraphWithLocation","addGraphWithLocation","createGraphWithRegion","addGraphWithRegion","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Containers/GeoContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Graph from '../Components/Graph';\nimport GraphInputForm from '../Components/GraphInputForm';\nimport GraphService from '../Services/GraphService';\nimport LocationList from '../Components/LocationList';\n\nconst GeoContainer = () => {\n  const [plotImage, setPlotImage] = useState(null);\n  // const [inputData, setInputData] = useState([]);\n  const [locationData, setLocationData] = useState([]);\n  const [regions, setRegions] = useState([]);\n\n  // useEffect(() => {\n  //   fetch('http://127.0.0.1:5000/graphdata')\n  //     .then(res => res.json())\n  //     .then(data => setPlotImage(data.image))\n  // }, [plotImage]);\n\n  useEffect(() => {\n    getLocationData() \n  }, [])\n\n  function getLocationData(){\n    fetch('http://127.0.0.1:5000/data/locations')\n    .then(res => res.json())\n    // .then(data => console.log(data))\n    .then(data => setLocationData(data))\n  }\n\n  // useEffect(() => {\n  //   getRegions() \n  // }, [locationData])\n\n  const getRegions = () => {\n    let regions = []\n    let location\n    for (location in locationData)\n    {regions.push(location.region)}\n    return regions\n  }\n\n  function createGraph(geoData) {\n    GraphService.addGraph(geoData)\n    .then(data => {\n      console.log(data)\n      // setPlotImage(data.image)\n    })\n    .then(data => console.log(data.image))\n    }\n\n    function createGraphWithLocation(geoData) {\n      GraphService.addGraphWithLocation(geoData)\n      .then(data => {\n        console.log(data)\n        // setPlotImage(data.image)\n      })\n      .then(data => console.log(data))\n      }\n\n      function createGraphWithRegion(geoData) {\n        GraphService.addGraphWithRegion(geoData)\n        .then(data => {\n          console.log(data)\n          // setPlotImage(data.image)\n        })\n        .then(data => console.log(data))\n        }\n\n  return (\n    <div>\n    <GraphInputForm createGraph={createGraph}/>\n    <img src=\"Images/TestImage1.png\" alt=\"\" />\n    <ul>\n      <LocationList locationData={locationData} createGraphWithLocation={createGraphWithLocation}/>\n    </ul>\n    <ul>\n      <LocationList regions={regions} createGraphWithRegion={createGraphWithRegion}/>\n    </ul>\n    </div>\n  );\n}\n\nexport default GeoContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}