{"ast":null,"code":"var _jsxFileName = \"/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Containers/GraphContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GraphInputForm from '../Components/GraphInputForm';\nimport GraphService from '../Services/GraphService';\nimport LocationList from '../Components/LocationList';\nimport RegionList from '../Components/RegionList';\nimport PlotByRegionButton from '../Components/PlotByRegionButton';\nimport './GraphContainer.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleArrowDown } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphContainer = () => {\n  _s();\n  const [plotImage, setPlotImage] = useState(null);\n  const [locationData, setLocationData] = useState([]);\n  const [regions, setRegions] = useState([]);\n  useEffect(() => {\n    getLocationData();\n  }, []);\n  function getLocationData() {\n    fetch('http://127.0.0.1:5000/data/locations').then(res => res.json()).then(data => setLocationData(data));\n  }\n  useEffect(() => {\n    setRegions(getRegions());\n  }, [locationData]);\n  const getRegions = () => {\n    // Hard coded inputs\n    // const inputted_regions = [{\n    //   name: \"Caithness, Scotland\",\n    //   region_id: 1\n    // }, \n    // {\n    //   name: \"East Grampians, Scotland\",\n    //   region_id: 2\n    // }, \n    // {\n    //   name: \"Western Central Belt, Scotland\",\n    //   region_id: 3\n    // }, \n    // {\n    //   name: \"Eastern Central Belt, Scotland\",\n    //   region_id: 4\n    // },\n    // {\n    //   name: \"Dumfries and Galloway, Scotland\",\n    //   region_id: 5\n    // }]\n\n    var locations = locationData;\n    var regions_counter = [];\n    var regions_unique = [];\n    for (let i = 0; i < locations.length; i++) {\n      if (!regions_counter[locations[i].region]) {\n        regions_unique.push({\n          name: locations[i].region,\n          region_id: i\n        });\n        regions_counter[locations[i].region] = 1;\n      }\n    }\n    // console.log(regions_unique)\n    return regions_unique;\n    // return inputted_regions\n  };\n\n  function createGraph(geoData) {\n    GraphService.addGraph(geoData).then(data => {}).then(data => console.log(\"image generated\"));\n  }\n  function createGraphWithLocation(geoData) {\n    GraphService.addGraphWithLocation(geoData).then(data => {\n      console.log(data);\n      // setPlotImage(data.image)\n    }).then(data => console.log(data));\n  }\n  function createGraphAllLocationsByRegion() {\n    let regions = [];\n    regions = getRegions();\n    GraphService.addGraphWithLocationsByRegion(regions).then(data => {\n      console.log(data);\n      // setPlotImage(data.image)\n    }).then(data => console.log(data));\n  }\n  function createGraphWithRegion(geoData) {\n    GraphService.addGraphWithRegion(geoData).then(data => {\n      console.log(data);\n    }).then(data => console.log(data));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UserInputsAndGraph\",\n      children: [/*#__PURE__*/_jsxDEV(GraphInputForm, {\n        createGraph: createGraph\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GraphParent\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"GraphImage\",\n          src: \"Images/TestImage1.png\",\n          alt: \"Graph showing temperature vs depth data points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FilterLabelAndInputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"FilterDatalabel\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Filter data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCircleArrowDown,\n          size: \"xl\",\n          className: \"DownArrow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SelectInputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"LocationList\",\n          children: /*#__PURE__*/_jsxDEV(LocationList, {\n            locationData: locationData,\n            createGraphWithLocation: createGraphWithLocation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"RegionList\",\n          children: /*#__PURE__*/_jsxDEV(RegionList, {\n            regions: regions,\n            createGraphWithRegion: createGraphWithRegion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(PlotByRegionButton, {\n          createGraphAllLocationsByRegion: createGraphAllLocationsByRegion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphContainer, \"+BjADFE864pt5OGeTy/q/7uQglw=\");\n_c = GraphContainer;\nexport default GraphContainer;\nvar _c;\n$RefreshReg$(_c, \"GraphContainer\");","map":{"version":3,"names":["React","useState","useEffect","GraphInputForm","GraphService","LocationList","RegionList","PlotByRegionButton","FontAwesomeIcon","faCircleArrowDown","jsxDEV","_jsxDEV","GraphContainer","_s","plotImage","setPlotImage","locationData","setLocationData","regions","setRegions","getLocationData","fetch","then","res","json","data","getRegions","locations","regions_counter","regions_unique","i","length","region","push","name","region_id","createGraph","geoData","addGraph","console","log","createGraphWithLocation","addGraphWithLocation","createGraphAllLocationsByRegion","addGraphWithLocationsByRegion","createGraphWithRegion","addGraphWithRegion","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","icon","size","_c","$RefreshReg$"],"sources":["/Users/andrewdyson/Documents/Study/Codeclan_work/Capstone_Project/Project_Code/geothermal_energy_app/Client/src/Containers/GraphContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport GraphInputForm from '../Components/GraphInputForm';\nimport GraphService from '../Services/GraphService';\nimport LocationList from '../Components/LocationList';\nimport RegionList from '../Components/RegionList';\nimport PlotByRegionButton from '../Components/PlotByRegionButton';\nimport './GraphContainer.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCircleArrowDown } from '@fortawesome/free-solid-svg-icons'\n\nconst GraphContainer = () => {\n  const [plotImage, setPlotImage] = useState(null);\n  const [locationData, setLocationData] = useState([]);\n  const [regions, setRegions] = useState([]);\n\n\n  useEffect(() => {\n    getLocationData() \n  }, [])\n\n  function getLocationData(){\n    fetch('http://127.0.0.1:5000/data/locations')\n    .then(res => res.json())\n    .then(data => setLocationData(data))\n  }\n\n  useEffect(() => {\n    setRegions(getRegions())\n  }, [locationData])\n\n  const getRegions = () => {\n    // Hard coded inputs\n    // const inputted_regions = [{\n    //   name: \"Caithness, Scotland\",\n    //   region_id: 1\n    // }, \n    // {\n    //   name: \"East Grampians, Scotland\",\n    //   region_id: 2\n    // }, \n    // {\n    //   name: \"Western Central Belt, Scotland\",\n    //   region_id: 3\n    // }, \n    // {\n    //   name: \"Eastern Central Belt, Scotland\",\n    //   region_id: 4\n    // },\n    // {\n    //   name: \"Dumfries and Galloway, Scotland\",\n    //   region_id: 5\n    // }]\n\n    var locations = locationData\n    var regions_counter = []\n    var regions_unique = []\n    for( let i = 0; i < locations.length; i++ ){\n    if( !regions_counter[locations[i].region]){\n    regions_unique.push({\n      name: locations[i].region,\n      region_id: i\n    })\n    regions_counter[locations[i].region] = 1\n  }\n}\n  // console.log(regions_unique)\n  return regions_unique\n    // return inputted_regions\n  }\n\n  function createGraph(geoData) {\n    GraphService.addGraph(geoData)\n    .then(data => {\n\n    })\n    .then(data => console.log(\"image generated\"))\n    }\n\n  function createGraphWithLocation(geoData) {\n    GraphService.addGraphWithLocation(geoData)\n    .then(data => {\n      console.log(data)\n      // setPlotImage(data.image)\n    })\n    .then(data => console.log(data))\n    }\n\n\n  function createGraphAllLocationsByRegion() {\n    let regions = []\n    regions = getRegions()\n  \n    GraphService.addGraphWithLocationsByRegion(regions)\n    .then(data => {\n      console.log(data)\n      // setPlotImage(data.image)\n    })\n    .then(data => console.log(data))\n    }\n\n  function createGraphWithRegion(geoData) {\n    GraphService.addGraphWithRegion(geoData)\n    .then(data => {\n      console.log(data)\n    })\n    .then(data => console.log(data))\n    }\n\n\n\n  return (\n    <div>\n      <div className=\"UserInputsAndGraph\">\n          <GraphInputForm createGraph={createGraph}/>\n          <div className=\"GraphParent\">\n          <img className=\"GraphImage\" src=\"Images/TestImage1.png\" alt=\"Graph showing temperature vs depth data points\" />\n          </div>\n      </div>\n      <div className=\"FilterLabelAndInputs\">\n          <div className=\"FilterDatalabel\">\n              <p>Filter data</p>\n              <FontAwesomeIcon icon={faCircleArrowDown } size=\"xl\" className=\"DownArrow\"/>\n          </div>\n          <div className=\"SelectInputs\">\n              <ul className=\"LocationList\">\n                <LocationList locationData={locationData} createGraphWithLocation={createGraphWithLocation}/>\n              </ul>\n              <ul className=\"RegionList\">\n                <RegionList regions={regions} createGraphWithRegion={createGraphWithRegion}/>\n              </ul>\n                <PlotByRegionButton createGraphAllLocationsByRegion={createGraphAllLocationsByRegion}/>\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default GraphContainer;  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}